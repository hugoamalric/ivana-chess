ivana-chess:
  server:
    # Server bind address
    bind-address: ${IVANA_CHESS_SERVER_BIND_ADDRESS:0.0.0.0}
    # Server port
    port: ${IVANA_CHESS_SERVER_PORT:8080}
    # Context path
    context-path: ${IVANA_CHESS_SERVER_CONTEXT_PATH:/}
    # Coma-separated list of allowed origins
    allowed-origins: ${IVANA_CHESS_SERVER_ALLOWED_ORIGINS}
    ssl:
      # If SSL is enabled
      enabled: ${IVANA_CHESS_SERVER_SSL_ENABLED:false}
      # Path to keystore file
      keystore: ${IVANA_CHESS_SERVER_SSL_KEYSTORE:}
      # Type of keystore
      keystore-type: ${IVANA_CHESS_SERVER_SSL_KEYSTORE_TYPE:PKCS12}
      # Password of keystore
      keystore-password: ${IVANA_CHESS_SERVER_SSL_KEYSTORE_PASSWORD:changeit}
      # Alias of key in keystore
      key-alias: ${IVANA_CHESS_SERVER_SSL_KEY_ALIAS:localhost}
      # Path to truststore file
      truststore: ${IVANA_CHESS_SERVER_SSL_TRUSTSTORE:}
      # Type of truststore
      truststore-type: ${IVANA_CHESS_SERVER_SSL_TRUSTSTORE_TYPE:PKCS12}
      # Password of truststore
      truststore-password: ${IVANA_CHESS_SERVER_SSL_TRUSTSTORE_PASSWORD:changeit}
  db:
    # JDBC URL of database
    url: ${IVANA_CHESS_DB_URL:jdbc:postgresql://127.0.0.1:5432/ivana_chess_api?currentSchema=public}
    # Username used to connect to database
    username: ${IVANA_CHESS_DB_USERNAME:ivana_chess_api}
    # Password used to connect to database
    password: ${IVANA_CHESS_DB_PASSWORD:ivana_chess_api}
  broker:
    # Host of broker
    host: ${IVANA_CHESS_BROKER_URL:127.0.0.1}
    # Port of broker
    port: ${IVANA_CHESS_BROKER_PORT:5672}
    # Username used to connect to broker
    username: ${IVANA_CHESS_BROKER_USERNAME:guest}
    # Password used to connect to broker
    password: ${IVANA_CHESS_BROKER_PASSWORD:guest}
    # ID used to create queue specific to instance
    client-id: ${IVANA_CHESS_BROKER_CLIENT_ID:ivana-chess-api-01}
    # Name of matchmaking exchange
    matchmaking-exchange: ${IVANA_CHESS_BROKER_MATCHMAKING_EXCHANGE:matchmaking}
    ssl:
      # If SSL is enabled for broker connection
      enabled: ${IVANA_CHESS_BROKER_SSL_ENABLED:false}
      # If certificate hostname is verified on connection
      verify-hostname: ${IVANA_CHESS_BROKER_SSL_VERIFY_HOSTNAME:false}
  stomp:
    # Host of STOMP
    host: ${IVANA_CHESS_STOMP_URL:127.0.0.1}
    # Port of STOMP
    port: ${IVANA_CHESS_STOMP_PORT:61613}
    # Username used to connect to STOMP
    username: ${IVANA_CHESS_STOMP_USERNAME:guest}
    # Password used to connect to STOMP
    password: ${IVANA_CHESS_STOMP_PASSWORD:guest}
    # If SSL is enabled for STOMP connection
    ssl-enabled: ${IVANA_CHESS_STOMP_SSL_ENABLED:false}
  auth:
    # Secret used to generate JWT
    secret: ${IVANA_CHESS_AUTH_SECRET:changeit}
    # Number of seconds for which the JWT is valid
    validity: ${IVANA_CHESS_AUTH_EXPIRATION:604800}
    header:
      # HTTP header name which contains JWT
      name: ${IVANA_CHESS_AUTH_HEADER_NAME:Authorization}
      # Prefix of HTTP header value which prefixes JWT
      value-prefix: ${IVANA_CHESS_AUTH_HEADER_VALUE_PREFIX:Bearer }
    cookie:
      # Name of cookie used to send JWT
      name: ${IVANA_CHESS_AUTH_COOKIE_NAME:_ivana_chess_session}
      # Domain of cookie
      domain: ${IVANA_CHESS_AUTH_COOKIE_DOMAIN:localhost}
      # If cookie secure attribute is enabled
      secure: ${IVANA_CHESS_AUTH_COOKIE_SECURE:false}
      # If cookie http only attribute is enabled
      http-only: ${IVANA_CHESS_AUTH_COOKIE_HTTP_ONLY:true}
  logging:
    # Path to Logback configuration file
    config: ${IVANA_CHESS_LOGGING_CONFIG:classpath:logback.xml}

server:
  address: ${ivana-chess.server.bind-address}
  port: ${ivana-chess.server.port}
  servlet:
    context-path: ${ivana-chess.server.context-path}
  ssl:
    enabled: ${ivana-chess.server.ssl.enabled}
    key-store: ${ivana-chess.server.ssl.keystore}
    key-store-type: ${ivana-chess.server.ssl.keystore-type}
    key-store-password: ${ivana-chess.server.ssl.keystore-password}
    key-alias: ${ivana-chess.server.ssl.key-alias}
    trust-store: ${ivana-chess.server.ssl.truststore}
    trust-store-type: ${ivana-chess.server.ssl.truststore-type}
    trust-store-password: ${ivana-chess.server.ssl.truststore-password}

spring:
  datasource:
    url: ${ivana-chess.db.url}
    username: ${ivana-chess.db.username}
    password: ${ivana-chess.db.password}
  jackson:
    default-property-inclusion: non_null
  liquibase:
    change-log: classpath:/db/changelog.yml
  mvc:
    throw-exception-if-no-handler-found: true
  rabbitmq:
    host: ${ivana-chess.broker.host}
    port: ${ivana-chess.broker.port}
    username: ${ivana-chess.broker.username}
    password: ${ivana-chess.broker.password}
    ssl:
      enabled: ${ivana-chess.broker.ssl.enabled}
      verify-hostname: ${ivana-chess.broker.ssl.verify-hostname}

logging:
  config: ${ivana-chess.logging.config}
